<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HotelSystem.Infrastructure.Styles.MainWindow">

    <local:WindowMinimizeCommand x:Key="MinimizeCommand"></local:WindowMinimizeCommand>
    <local:WindowMaximizeCommand x:Key="MaximizeCommand"></local:WindowMaximizeCommand>
    <local:WindowCloseCommand x:Key="CloseCommand"></local:WindowCloseCommand>

    <Style TargetType="{x:Type Button}" x:Key="WindowButton">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="{StaticResource brushPrimaryWindowBackgroundColour}"/>
        <Setter Property="Foreground" Value="{StaticResource brushPrimaryWindowForegroundColour}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource brushWindowDefaultButtonColour}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource brushWindowHoverButtonColour}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource brushWindowPressedButtonColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowExitButton" BasedOn="{StaticResource WindowButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource brushWindowExitHoverButtonColour}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource brushWindowExitPressedButtonColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="WindowButtonTextStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Grid Background="{StaticResource brushPrimaryWindowBackgroundColour}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <!-- Window Icon -->
                    <Label Grid.Column="0"
                           VerticalAlignment="Center"
                           local:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"
                           local:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                           Padding="0">
                        <Image DockPanel.Dock="Left" 
                               Height="18"
                               Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=Icon}"
                               local:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               local:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
                    </Label>
                    <!-- Window Title -->
                    <Label Grid.Column="1" 
                           DockPanel.Dock="Left" 
                           Content="{TemplateBinding Property=Title}" 
                           Padding="0,0,0,2"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Foreground="{StaticResource brushPrimaryWindowForegroundColour}"
                           FontSize="16"
                           local:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                           local:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                           local:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                           local:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                           local:ShowSystemMenuBehavior.RightButtonShow="true">
                    </Label>
                    <!-- Window Buttons -->
                    <StackPanel Grid.Column="2"
                                Orientation="Horizontal">
                        <Button DockPanel.Dock="Right" 
                                 Style="{StaticResource WindowButton}" 
                                 Command="{StaticResource MinimizeCommand}" 
                                 CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                            <TextBlock Text="─"
                                       Style="{StaticResource WindowButtonTextStyle}"/>
                        </Button>
                        <Button DockPanel.Dock="Right" 
                                Style="{StaticResource WindowButton}" 
                                Command="{StaticResource MaximizeCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                            <TextBlock Text="□"
                                       Style="{StaticResource WindowButtonTextStyle}"/>
                        </Button>
                        <Button DockPanel.Dock="Right"  
                                Style="{StaticResource WindowExitButton}" 
                                Command="{StaticResource CloseCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                            <TextBlock Text="×"
                                       Style="{StaticResource WindowButtonTextStyle}"/>
                        </Button>
                    </StackPanel>
                </Grid>
                <Border Grid.Row="1" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter x:Name="WindowContent"/>
                        </AdornerDecorator>
                        <ResizeGrip  x:Name="WindowResizeGrip" 
                                     HorizontalAlignment="Right" 
                                     IsTabStop="false" 
                                     Visibility="Collapsed" 
                                     VerticalAlignment="Bottom"/>
                    </Grid>
                </Border>
            </Grid>
            <Thumb x:Name="ThumbTop"
                   Height="6" 
                   Margin="14,0" 
                   VerticalAlignment="Top" 
                   Cursor="SizeNS"  
                   Opacity="0" 
                   local:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopLeft" 
                   Height="6" 
                   Width="6" 
                   VerticalAlignment="Top" 
                   HorizontalAlignment="Left" 
                   Cursor="SizeNWSE"  
                   Opacity="0" 
                   local:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottom" 
                   Height="6" 
                   Margin="14,0" 
                   VerticalAlignment="Bottom" 
                   Cursor="SizeNS" 
                   Opacity="0" 
                   local:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopRight" 
                   Height="6" 
                   Width="6" 
                   VerticalAlignment="Top" 
                   HorizontalAlignment="Right" 
                   Cursor="SizeNESW"  
                   Opacity="0" 
                   local:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbRight" 
                   HorizontalAlignment="Right" 
                   Margin="0,14" 
                   Width="6" 
                   Cursor="SizeWE"  
                   Opacity="0" 
                   local:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomRight" 
                   Height="6" 
                   Width="6" 
                   VerticalAlignment="Bottom" 
                   HorizontalAlignment="Right" 
                   Cursor="SizeNWSE"  
                   Opacity="0" 
                   local:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbLeft" 
                   HorizontalAlignment="Left" 
                   Margin="0,14" 
                   Width="6" 
                   Cursor="SizeWE"  
                   Opacity="0" 
                   local:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomLeft" 
                   Height="6" 
                   Width="6" 
                   VerticalAlignment="Bottom" 
                   HorizontalAlignment="Left" 
                   Cursor="SizeNESW"  
                   Opacity="0" 
                   local:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="{StaticResource brushPrimaryWindowBackgroundColour}"/>
        <Setter Property="Foreground" Value="{StaticResource brushPrimaryWindowForegroundColour}"/>
        <Setter Property="BorderBrush" Value="{StaticResource brushPrimaryWindowBackgroundColour}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
    </Style>
</ResourceDictionary>